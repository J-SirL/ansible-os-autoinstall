---
- name: setup pxe
  hosts: boot
  tasks:
    - include_vars: "{% if site is not defined %}site_vars.yml{% else %}{{ site }}.site_vars.yml{% endif %}"
      tags:
      - hosts

    - name: create pxe & efi dir
      file: name={{ item }} state=directory
      with_items:
        - "{{ menu_dir }}"
        - "{{ efi_dir }}"

    - name: create pxe menu workdir
      local_action: file dest={{ playbook_dir }}/workdir/{{ item  }} state=directory
      with_items: "{{ (groups['ks'] + groups['preseed'] + groups['yast'])|map('extract', hostvars, 'menu')|unique|list }}"
      run_once: true

    - name: create efi menu workdir
      local_action: file dest={{ playbook_dir }}/workdir/{{ item  }}-grub2efi state=directory
      with_items: "{{ (groups['ks'] + groups['preseed'] + groups['yast'])|map('extract', hostvars, 'menu')|unique|list }}"
      run_once: true

    - include: gen_pxe_files.yml
      with_items: "{{ dtypes }}"
      loop_control:
        loop_var: atype

    - name: assemble pxe menus
      assemble: src={{ playbook_dir }}/workdir/{{ item }} dest={{ menu_dir }}/menu.{{ item }} remote_src=False
      with_items: "{{ (groups['ks'] + groups['preseed'] + groups['yast'])|map('extract', hostvars, 'menu')|unique|list }}"

    - name: install default pxe menu
      template: src=templates/default.j2 dest={{ menu_dir }}/default

    - name: assemble efi menus
      local_action: assemble src={{ playbook_dir }}/workdir/{{ item }}-grub2efi dest={{ playbook_dir }}/workdir/{{ item }}-grub2efi/menu.{{ item }} remote_src=False
      with_items: "{{ (groups['ks'] + groups['preseed'] + groups['yast'])|map('extract', hostvars, 'menu')|unique|list }}"

    - name: install default efi menu
      template: src=templates/default_grub2efi.j2 dest={{ efi_dir }}/grub.cfg

    - name: cleanup workdir
      local_action: file dest={{ playbook_dir }}/workdir state=absent
      run_once: true

- name: setup kickstart, preseed, autoyast files
  hosts: kickstart
  tasks:
    - name: create kickstart dir
      file: name={{ ks_dir }} state=directory

    - include: gen_ks_files.yml
      with_items: "{{ dtypes }}"
      loop_control:
        loop_var: atype
